
--State
CREATE TABLE mst_state (
    state_id serial PRIMARY KEY  NOT NULL,
    state_name character varying(100) NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    created_on timestamp without time zone DEFAULT ('now'::text)::date NOT NULL
);

ALTER TABLE  mst_state ADD COLUMN updated_on timestamp without time zone;

SELECT MAX(state_id) FROM mst_state;
SELECT nextval('mst_state_state_id_seq');
SELECT setval('mst_state_state_id_seq', (SELECT MAX(state_id) FROM mst_state)+1);


--- District
CREATE TABLE mst_district (
    district_id serial PRIMARY KEY  NOT NULL,
    district_name character varying(100) NOT NULL,
    state_id Integer NOT NULL,
    alert_zone character varying(50),
    is_active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    created_on timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    FOREIGN KEY (state_id) REFERENCES mst_state(state_id)

);
SELECT MAX(district_id) FROM mst_district;
SELECT nextval('mst_district_district_id_seq');
SELECT setval('mst_district_district_id_seq', (SELECT MAX(district_id) FROM mst_district)+1);


CREATE TABLE mst_sosdpo (
    sosdpo_id serial PRIMARY KEY  NOT NULL,
    sosdpo_name character varying(100) NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    created_on timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,

);


CREATE TABLE mst_policestation (
    ps_id serial PRIMARY KEY  NOT NULL,
    ps_name character varying(100) NOT NULL,
    state_id INTEGER NOT NULL,
    district_id INTEGER NOT NULL,
    sosdpo_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (state_id) REFERENCES mst_state(state_id),
    FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
    FOREIGN KEY (sosdpo_id) REFERENCES mst_sosdpo(sosdpo_id)
);

CREATE TABLE mst_beat (
    beat_id serial PRIMARY KEY  NOT NULL,
    beat_name character varying(100) NOT NULL,
    state_id INTEGER NOT NULL,
    district_id INTEGER NOT NULL,
    sosdpo_id INTEGER NOT NULL,
    ps_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (state_id) REFERENCES mst_state(state_id),
    FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
    FOREIGN KEY (sosdpo_id) REFERENCES mst_sosdpo(sosdpo_id),
    FOREIGN KEY (ps_id) REFERENCES mst_policestation(ps_id),
);


INSERT INTO mst_policestation (ps_id, ps_name, state_id, district_id, active, createddate,is_deleted) VALUES
(20,	'Police Jubbal',	9,	204,'Y','2020-06-01 17:07:31',	'N')




-- Coming From Locations
CREATE TABLE mst_comingfromlocations (
    comingfromlocation_id serial PRIMARY KEY  NOT NULL,
    comingfromlocation_name character varying(100) NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
     is_deleted boolean DEFAULT false NOT NULL
);

--Module

CREATE TABLE mst_module (
    module_id serial PRIMARY KEY  NOT NULL,
    module_name character varying(255) NOT NULL,
	module_icon character varying(255) NOT NULL,
    role_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
	FOREIGN KEY (role_id) REFERENCES roles(role_id)
);

-- Module Role Mapping
CREATE TABLE module_role_mapping(
id SERIAL PRIMARY KEY NOT NULL,
module_id INTEGER NOT NULL,
role_id INTEGER NOT NULL,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone
FOREIGN KEY (module_id) REFERENCES mst_module(module_id),
FOREIGN KEY (role_id) REFERENCES roles(role_id)

)

CREATE TABLE mst_submodule (
    submodule_id serial PRIMARY KEY  NOT NULL,
    submodule_name character varying(255) NOT NULL,
	submodule_icon character varying(255) NOT NULL,
    module_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
	FOREIGN KEY (module_id) REFERENCES mst_module(module_id)
);


CREATE TABLE mst_apppin (
    pin_id serial PRIMARY KEY  NOT NULL,
    pin INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone
);




-- Users
CREATE TABLE users(
user_id SERIAL PRIMARY KEY NOT NULL,
first_name character varying(100),
last_name  character varying (100),
username character varying (100),
password character varying (200),
mobile_number INTEGER,
rank character varying(200),
state_id INTEGER NOT NULL,
district_id INTEGER NOT NULL,
beat_id INTEGER NOT NULL,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone,
FOREIGN KEY (state_id) REFERENCES mst_state(state_id),
FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
FOREIGN KEY (beat_id) REFERENCES mst_beat(beat_id)

);

--Roles
CREATE TABLE roles(
role_id SERIAL PRIMARY KEY NOT NULL,
role_name character varying (15),
role_description character varying (55),
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone

)

-- Role Mapping
CREATE TABLE user_role_mapping(
id SERIAL PRIMARY KEY NOT NULL,
user_id INTEGER NOT NULL,
role_id INTEGER NOT NULL,
active boolean DEFAULT true NOT NULL,
createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
lastmodifieddate timestamp without time zone
FOREIGN KEY (user_id) REFERENCES users(user_id),
FOREIGN KEY (role_id) REFERENCES roles(role_id)

)

-- User Location Logs
CREATE TABLE user_location_logs(
    id SERIAL PRIMARY KEY NOT NULL,
    user_id INTEGER NOT NULL,
    role_id INTEGER NOT NULL,
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    username character varying (55),
    mobile_number INTEGER NOT NULL,
    beat_id INTEGER NOT NULL,
    location_points geometry NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (role_id) REFERENCES roles(role_id),
    FOREIGN KEY (beat_id) REFERENCES mst_beat(beat_id)
)





-- java -cp x.jar service.App

--
CREATE TABLE mst_submoduleoption (
    option_id serial PRIMARY KEY  NOT NULL,
    option_name character varying(255) NOT NULL,
    submodule_id INTEGER NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
	FOREIGN KEY (submodule_id) REFERENCES mst_submodule(submodule_id)
);


-- THE BEAST
CREATE TABLE information(
    id SERIAL PRIMARY KEY NOT NULL,
    state_id INTEGER NOT NULL,
    district_id INTEGER NOT NULL,
	sosdpo_id INTEGER NOT NULL,
	ps_id INTEGER NOT NULL,
	beat_id INTEGER NOT NULL,
	module_id INTEGER NOT NULL,
	submodule_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	role_id INTEGER NOT NULL,
	name character varying(255) ,
	owner_name character varying(255) ,
	owner_nametwo character varying(255),
	photo character varying(255),
	photo_id character varying(255),
	contact_numberone character varying(15),
	contact_numbertwo character varying(15),
	helpline_number character varying(15),
    landline_number character varying(15),
	option_id INTEGER ,
	cctv character varying(15),
	number_idols character varying(15),
	number_securitypersons character varying(15),
	email_id character varying(50),
	facbook_id character varying(50),
	present_address character varying(100),
	permanent_address character varying(100),
	fir_no character varying(20),
	fir_details character varying(255),
	licencee_no character varying(50),
	licencee_name character varying(50),
	details character varying(255),
	other character varying(255),
	checking_date_sho character varying(15),
	total_population character varying(15),
	period_fair character varying(15),
	authority character varying(20),
	duration_parole character varying(20),
	id_proof character varying(50),
	section character varying(50),
	special_reported_cases character varying(50),
    extra_one character varying(255),
	extra_two character varying(255),
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    location_points geometry NOT NULL,
    active boolean DEFAULT true NOT NULL,
    createddate timestamp without time zone DEFAULT ('now'::text)::date NOT NULL,
    lastmodifieddate timestamp without time zone,
	 FOREIGN KEY (state_id) REFERENCES mst_state(state_id),
     FOREIGN KEY (district_id) REFERENCES mst_district(district_id),
     FOREIGN KEY (sosdpo_id) REFERENCES mst_sosdpo(sosdpo_id),
     FOREIGN KEY (ps_id) REFERENCES mst_policestation(ps_id),
     FOREIGN KEY (beat_id) REFERENCES mst_beat(beat_id),
     FOREIGN KEY (module_id) REFERENCES mst_module(module_id),
     FOREIGN KEY (user_id) REFERENCES users(user_id),
     FOREIGN KEY (role_id) REFERENCES roles(role_id),
     FOREIGN KEY (submodule_id) REFERENCES mst_submodule(submodule_id)
)






#########################################################################################################
####################   Spatial Queries ##################################################################
#########################################################################################################

CREATE TABLE mst_locations (
    location_id serial PRIMARY KEY  NOT NULL,
    location_name character varying(100) NOT NULL,
    location_points geometry NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    created_on timestamp without time zone DEFAULT ('now'::text)::date NOT NULL

);


SELECT ST_SetSRID( ST_Point( -71.104, 42.315), 4326)

INSERT INTO mst_locations(location_name, location_points,is_active,is_deleted)
VALUES('Test', ST_GeomFromText('POINT(-71.060316 48.432044)', 4326), true,false);


SELECT ST_AsText(location_points) , location_name
       FROM mst_locations;


SELECT location_id, location_name, location_points, ST_Distance(location_points,
			ST_SetSRID(ST_Point(77.4082178,31.0667738),4326)) AS distance
            FROM mst_locations
            ORDER BY location_points  <-> ST_SetSRID(ST_Point(77.4082178,31.0667738),4326)
            LIMIT 20


SELECT ST_AsGeoJSON(beat_geometry) from  mst_beat WHERE ps_id=1


 --Working Queries
 SELECT *,  ST_Distance(location_points, ST_SetSRID(ST_Point(77.1868896,31.0704335),4326))/1000 AS distance
 FROM information
 WHERE ST_DWithin(location_points, ST_MakePoint(77.1868896,31.0704335)::geography, 100);

 -- chandigarh 30.7350626,76.6934887
 SELECT *
 FROM information
 WHERE ST_DWithin(
   location_points::geography,
   ST_GeomFromText('POINT(76.6934887 30.7350626)',4326)::geography,
   40000 -- DISTANCE IN METERS
 );